"""Adiciona pos_x e pos_y na tabela de mesas

Revision ID: 73a25b9cfbed
Revises: 9eaeec31a7c7
Create Date: 2025-10-17 09:44:28.653149

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '73a25b9cfbed'
down_revision: Union[str, Sequence[str], None] = '9eaeec31a7c7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # --- INÍCIO DA CORREÇÃO ---
    # Adicionamos 'server_default=sa.func.now()' para dizer ao banco de dados para
    # preencher as linhas existentes com a data e hora atuais.
    op.add_column('tables', sa.Column('created_at', sa.DateTime(), server_default=sa.func.now(), nullable=False))
    op.add_column('tables', sa.Column('updated_at', sa.DateTime(), server_default=sa.func.now(), nullable=False))
    # --- FIM DA CORREÇÃO ---

    op.alter_column('tables', 'status',
               existing_type=postgresql.ENUM('AVAILABLE', 'OCCUPIED', 'RESERVED', name='tablestatus'),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.drop_constraint('tables_number_key', 'tables', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('tables_number_key', 'tables', ['number'])
    op.alter_column('tables', 'status',
               existing_type=sa.String(length=50),
               type_=postgresql.ENUM('AVAILABLE', 'OCCUPIED', 'RESERVED', name='tablestatus'),
               existing_nullable=False)
    op.drop_column('tables', 'updated_at')
    op.drop_column('tables', 'created_at')
    # ### end Alembic commands ###